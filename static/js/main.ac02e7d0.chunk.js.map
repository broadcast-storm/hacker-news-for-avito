{"version":3,"sources":["components/Navbar/Navbar.tsx","components/LoaderText/index.tsx","components/NewsList/Item/index.tsx","components/NewsList/index.tsx","icons/refresh.svg","components/RefreshButton/index.tsx","store/hooks.ts","store/newStories/newStoriesSlice.ts","pages/MainPage/index.tsx","pages/NotFound/index.tsx","store/openedStory/openedStorySlice.ts","components/CommentsList/index.tsx","icons/left-arrow.svg","pages/OpenedNewsPage/index.tsx","App.tsx","store/index.ts","index.tsx"],"names":["Navbar","className","to","exact","activeClassName","LoaderText","text","fill","viewBox","xmlns","clipRule","d","fillRule","NewsItem","story","process","id","title","score","by","date","Date","time","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","makeDate","NewsList","storiesStatus","storiesList","map","item","RefreshButton","onClick","type","src","RefreshSvg","alt","useStoreDispatch","useDispatch","useStoreSelector","useSelector","fetchStoryIds","createAsyncThunk","a","axios","get","response","data","slice","Error","message","fetchStories","thunkAPI","start","end","getState","newStories","Promise","all","storyIdsList","result","newStoriesSlice","createSlice","name","initialState","storyIdsStatus","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","meta","arg","isRefreshing","MainPage","dispatch","useState","length","showingItems","setShowingItems","fetching","setFetching","refreshing","setRefreshing","scrollHandler","event","target","documentElement","scrollHeight","scrollTop","window","innerHeight","refreshNews","useEffect","timeRefresh","setInterval","document","addEventListener","removeEventListener","clearInterval","then","prev","finally","NotFound","fetchOpenedStory","fetchComments","openedStory","storyData","kids","refreshComments","responseStory","newCommentsIds","ids","comments","commentId","fetchAnswers","find","val","openedStorySlice","commentsStatus","storyStatus","clearAll","index","findIndex","answers","answersStatus","answersData","actions","CommentsList","timestamp","comment","deleted","answer","OpenedNewsPage","useParams","showingComments","setShowingComments","refreshCommentsFunc","parseInt","url","href","rel","ArrowSvg","App","path","component","store","configureStore","reducer","newStoriesReducer","openedStoryReducer","devTools","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac02e7d0.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = (): JSX.Element => (\r\n  <header className=\"fixed z-10 top-0 left-0 w-full bg-white shadow-md hover:shadow-lg transition duration-500\">\r\n    <nav className=\"container mx-auto flex items-center justify-between p-6 h-20\">\r\n      <h2 className=\"text-xl lg:text-3xl text-blue-600 font-bold\">\r\n        Hacker News\r\n      </h2>\r\n      <ul>\r\n        <li className=\"block space-x-5 text-xl\">\r\n          <NavLink\r\n            to=\"/\"\r\n            exact\r\n            activeClassName=\"text-blue-500\"\r\n            className=\"hover:text-blue-500\"\r\n          >\r\n            Главная\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Navbar;\r\n","interface LoaderTextProps {\r\n  text: string;\r\n}\r\n\r\nconst LoaderText = ({ text }: LoaderTextProps): JSX.Element => (\r\n  <div className=\"flex justify-center items-center space-x-1 text-sm text-gray-700\">\r\n    <svg\r\n      fill=\"none\"\r\n      className=\"w-8 h-8 animate-spin\"\r\n      viewBox=\"0 0 32 32\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        clipRule=\"evenodd\"\r\n        d=\"M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z\"\r\n        fill=\"currentColor\"\r\n        fillRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n\r\n    <div className=\"text-lg\">{text}</div>\r\n  </div>\r\n);\r\n\r\nexport default LoaderText;\r\n","import { Link } from 'react-router-dom';\r\nimport { Story } from '../../../store/newStories/newStoriesSlice';\r\n\r\ninterface NewsItemProps {\r\n  story: Story;\r\n}\r\n\r\nconst NewsItem = ({ story }: NewsItemProps): JSX.Element => {\r\n  const makeDate = () => {\r\n    const date = new Date(story.time * 1000);\r\n    const day = `0${date.getDate()}`;\r\n    const month = `0${date.getMonth() + 1}`;\r\n    const year = date.getFullYear();\r\n    const hours = `0${date.getHours()}`;\r\n    const minutes = `0${date.getMinutes()}`;\r\n    const seconds = `0${date.getSeconds()}`;\r\n    return `${day.substr(-2)}/${month.substr(-2)}/${year} ${hours.substr(\r\n      -2,\r\n    )}:${minutes.substr(-2)}:${seconds.substr(-2)}`;\r\n  };\r\n  return (\r\n    <Link\r\n      to={`${process.env.PUBLIC_URL}/${story.id}`}\r\n      className=\"block group bg-white p-8 rounded-lg shadow-lg relative hover:shadow-2xl transition duration-500 my-4 cursor-pointer\"\r\n    >\r\n      <h2 className=\"text-lg md:text-2xl text-gray-800 font-semibold mb-3 group-hover:text-blue-500\">\r\n        {story.title}\r\n      </h2>\r\n      <p>\r\n        Рейтинг: <span className=\"font-bold\">{story.score}</span>\r\n      </p>\r\n      <p className=\"leading-6 tracking-normal\">\r\n        Автор: <span className=\"font-bold\">{story.by}</span>\r\n      </p>\r\n      <p className=\"text-gray-600 text-sm mt-2\">Опубликовано: {makeDate()}</p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NewsItem;\r\n","import NewsItem from './Item';\r\nimport { Story } from '../../store/newStories/newStoriesSlice';\r\n\r\ninterface NewsListProps {\r\n  storiesStatus: 'loading' | 'success' | 'error';\r\n  storiesList: Story[];\r\n}\r\n\r\nconst NewsList = ({\r\n  storiesStatus,\r\n  storiesList,\r\n}: NewsListProps): JSX.Element => (\r\n  <div>\r\n    {storiesStatus === 'success'\r\n      ? storiesList.map((item) => <NewsItem key={item.id} story={item} />)\r\n      : null}\r\n  </div>\r\n);\r\n\r\nexport default NewsList;\r\n","export default __webpack_public_path__ + \"static/media/refresh.d4f2ea6d.svg\";","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport RefreshSvg from '../../icons/refresh.svg';\r\n\r\ninterface RefreshButtonProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst RefreshButton = ({ onClick }: RefreshButtonProps): JSX.Element => (\r\n  <div\r\n    className=\"group flex rounded border-b-2 border-grey-dark overflow-hidden cursor-pointer\"\r\n    onClick={onClick}\r\n  >\r\n    <button\r\n      className=\"block text-white text-sm shadow-border bg-blue-500 group-hover:bg-blue-800 text-sm py-2 px-3 font-sans tracking-wide uppercase font-bold\"\r\n      type=\"button\"\r\n    >\r\n      Обновить\r\n    </button>\r\n    <div className=\"bg-blue-400 group-hover:bg-blue-800 shadow-border p-3\">\r\n      <div className=\"w-4 h-4\">\r\n        <img src={RefreshSvg} alt=\"\" className=\"w-full\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RefreshButton;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './index';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useStoreDispatch = () => useDispatch<AppDispatch>();\r\nexport const useStoreSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport type { RootState } from '../index';\r\n\r\nexport interface Story {\r\n  by: string;\r\n  descendants: number;\r\n  id: number;\r\n  score: number;\r\n  time: number;\r\n  title: string;\r\n  type: string;\r\n  url: string;\r\n}\r\n\r\ninterface NewStoriesState {\r\n  storyIdsList: number[];\r\n  storyIdsStatus: 'loading' | 'success' | 'error';\r\n  storiesStatus: 'loading' | 'success' | 'error';\r\n  storiesList: Story[];\r\n}\r\n\r\nconst initialState: NewStoriesState = {\r\n  storyIdsList: [],\r\n  storyIdsStatus: 'loading',\r\n  storiesStatus: 'loading',\r\n  storiesList: [],\r\n};\r\n\r\nexport const fetchStoryIds = createAsyncThunk(\r\n  'newStories/fetchStoryIds',\r\n  async () => {\r\n    try {\r\n      const response = await axios.get<number[]>(\r\n        'https://hacker-news.firebaseio.com/v0/newstories.json',\r\n      );\r\n      return response.data.slice(0, 100);\r\n    } catch (error: any) {\r\n      throw Error(error!.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchStories = createAsyncThunk<\r\n  Story[],\r\n  {\r\n    start: number;\r\n    end: number;\r\n    isRefreshing: boolean;\r\n  },\r\n  { state: RootState }\r\n>('newStories/fetchStories', async ({ start, end }, thunkAPI) => {\r\n  const { newStories } = thunkAPI.getState();\r\n  try {\r\n    const result: Story[] = await Promise.all(\r\n      newStories.storyIdsList.slice(start, end + 1).map(async (id) => {\r\n        const response = await axios.get<Story>(\r\n          `https://hacker-news.firebaseio.com/v0/item/${id}.json`,\r\n        );\r\n        return response.data;\r\n      }),\r\n    );\r\n    return result;\r\n  } catch (error: any) {\r\n    throw Error(error!.message);\r\n  }\r\n});\r\n\r\nexport const newStoriesSlice = createSlice({\r\n  name: 'newStories',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchStoryIds.pending, (state) => {\r\n      state.storyIdsStatus = 'loading';\r\n      state.storiesStatus = 'loading';\r\n    });\r\n    builder.addCase(fetchStoryIds.fulfilled, (state, action) => {\r\n      state.storyIdsStatus = 'success';\r\n      state.storyIdsList = action.payload;\r\n    });\r\n    builder.addCase(fetchStoryIds.rejected, (state) => {\r\n      state.storyIdsStatus = 'error';\r\n    });\r\n    builder.addCase(fetchStories.fulfilled, (state, action) => {\r\n      state.storiesStatus = 'success';\r\n      state.storiesList =\r\n        action.meta.arg.isRefreshing || state.storiesList === null\r\n          ? [...action.payload]\r\n          : [...state.storiesList, ...action.payload];\r\n    });\r\n    builder.addCase(fetchStories.rejected, (state) => {\r\n      state.storiesStatus = 'error';\r\n    });\r\n  },\r\n});\r\n\r\nexport default newStoriesSlice.reducer;\r\n","import { useEffect, useState } from 'react';\r\nimport LoaderText from '../../components/LoaderText';\r\nimport NewsList from '../../components/NewsList';\r\nimport RefreshButton from '../../components/RefreshButton';\r\nimport { useStoreDispatch, useStoreSelector } from '../../store/hooks';\r\nimport {\r\n  fetchStories,\r\n  fetchStoryIds,\r\n} from '../../store/newStories/newStoriesSlice';\r\n\r\nconst MainPage = (): JSX.Element => {\r\n  const dispatch = useStoreDispatch();\r\n  const { storyIdsStatus, storiesStatus, storiesList } = useStoreSelector(\r\n    (state) => state.newStories,\r\n  );\r\n\r\n  const [showingItems, setShowingItems] = useState({\r\n    start: storiesList.length,\r\n    end: storiesList.length + 4,\r\n  });\r\n  const [fetching, setFetching] = useState(storiesStatus !== 'success');\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const scrollHandler = (event: Event) => {\r\n    const target = event.target as Document;\r\n    if (\r\n      target.documentElement.scrollHeight -\r\n        (target.documentElement.scrollTop + window.innerHeight) <\r\n      300\r\n    )\r\n      setFetching(true);\r\n  };\r\n\r\n  const refreshNews = () => {\r\n    setShowingItems({\r\n      start: 0,\r\n      end: 4,\r\n    });\r\n    setRefreshing(true);\r\n    setFetching(true);\r\n    dispatch(fetchStoryIds());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeRefresh = setInterval(() => {\r\n      refreshNews();\r\n    }, 60000);\r\n    document.addEventListener('scroll', scrollHandler);\r\n    if (storyIdsStatus !== 'success') dispatch(fetchStoryIds());\r\n    return () => {\r\n      document.removeEventListener('scroll', scrollHandler);\r\n      clearInterval(timeRefresh);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (storyIdsStatus === 'success' && fetching && storiesList.length < 100) {\r\n      dispatch(\r\n        fetchStories({\r\n          start: showingItems.start,\r\n          end: showingItems.end,\r\n          isRefreshing: refreshing,\r\n        }),\r\n      )\r\n        .then(() => {\r\n          setShowingItems((prev) => ({\r\n            start: prev.end + 1,\r\n            end: prev.end + 5,\r\n          }));\r\n        })\r\n        .finally(() => {\r\n          setFetching(false);\r\n          setRefreshing(false);\r\n        });\r\n    }\r\n  }, [storyIdsStatus, fetching]);\r\n\r\n  return (\r\n    <div className=\"lg:w-1/2 mx-auto\">\r\n      {storiesStatus === 'loading' ? (\r\n        <LoaderText text=\"Загрузка новостей\" />\r\n      ) : (\r\n        <>\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\" text-lg font-semibold text-gray-900\">\r\n              Последние новости\r\n            </h3>\r\n\r\n            <RefreshButton onClick={refreshNews} />\r\n          </div>\r\n          <NewsList storiesStatus={storiesStatus} storiesList={storiesList} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nconst NotFound = (): JSX.Element => (\r\n  <div className=\"bg-gray-100 justify-center\">\r\n    <div className=\"mt-24 m-auto\">\r\n      <span className=\"text-gray-500 text-6xl block text-center\">4 0 4</span>\r\n      <span className=\"mt-6 text-gray-500 text-xl block text-center\">\r\n        Страница не найдена\r\n      </span>\r\n    </div>\r\n    <div className=\"mt-6 flex justify-center\">\r\n      <NavLink\r\n        to={`${process.env.PUBLIC_URL}/`}\r\n        className=\"text-gray-500 font-mono text-xl bg-gray-200 p-3 rounded-md hover:shadow-md \"\r\n      >\r\n        На главную\r\n      </NavLink>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport type { RootState } from '../index';\r\n\r\nexport interface OpenedStory {\r\n  by: string;\r\n  descendants: number;\r\n  id: number;\r\n  kids?: number[] | null;\r\n  score: number;\r\n  text: string;\r\n  time: number;\r\n  title: string;\r\n  type: string;\r\n  url?: string;\r\n}\r\n\r\nexport interface Comment {\r\n  by: string;\r\n  id: number;\r\n  parent: number;\r\n  kids?: number[] | null;\r\n  deleted?: boolean;\r\n  text: string;\r\n  time: number;\r\n  type: string;\r\n  answers?: {\r\n    answersStatus: 'loading' | 'success' | 'error';\r\n    answersData: Comment[];\r\n  };\r\n}\r\n\r\ninterface OpenedStoryState {\r\n  storyStatus: 'loading' | 'success' | 'error';\r\n  storyData: OpenedStory | null;\r\n  commentsStatus: 'loading' | 'success' | 'error';\r\n  comments: Comment[];\r\n}\r\n\r\nconst initialState: OpenedStoryState = {\r\n  commentsStatus: 'loading',\r\n  storyStatus: 'loading',\r\n  storyData: null,\r\n  comments: [],\r\n};\r\n\r\nexport const fetchOpenedStory = createAsyncThunk<OpenedStory, number>(\r\n  'openedStory/fetchOpenedStory',\r\n  async (id) => {\r\n    try {\r\n      const response = await axios.get<OpenedStory>(\r\n        `https://hacker-news.firebaseio.com/v0/item/${id}.json`,\r\n      );\r\n      if (response.data === null) throw Error();\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw Error(error!.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchComments = createAsyncThunk<\r\n  Comment[],\r\n  {\r\n    start: number;\r\n    end: number;\r\n  },\r\n  { state: RootState }\r\n>('openedStory/fetchComments', async ({ start, end }, thunkAPI) => {\r\n  const { openedStory } = thunkAPI.getState();\r\n  try {\r\n    if (!openedStory.storyData!.kids) return [];\r\n    const result: Comment[] = await Promise.all(\r\n      openedStory.storyData!.kids!.slice(start, end).map(async (id) => {\r\n        const response = await axios.get<Comment>(\r\n          `https://hacker-news.firebaseio.com/v0/item/${id}.json`,\r\n        );\r\n        return response.data;\r\n      }),\r\n    );\r\n    return result;\r\n  } catch (error: any) {\r\n    throw Error(error!.message);\r\n  }\r\n});\r\n\r\nexport const refreshComments = createAsyncThunk<\r\n  {\r\n    ids: number[] | null;\r\n    comments: Comment[];\r\n  },\r\n  number,\r\n  { state: RootState }\r\n>('openedStory/refreshComments', async (id) => {\r\n  try {\r\n    const responseStory = await axios.get<OpenedStory>(\r\n      `https://hacker-news.firebaseio.com/v0/item/${id}.json`,\r\n    );\r\n    const newCommentsIds = responseStory.data.kids;\r\n    if (!newCommentsIds)\r\n      return {\r\n        ids: null,\r\n        comments: [],\r\n      };\r\n    const result: Comment[] = await Promise.all(\r\n      newCommentsIds.slice(0, 4).map(async (commentId) => {\r\n        const response = await axios.get<Comment>(\r\n          `https://hacker-news.firebaseio.com/v0/item/${commentId}.json`,\r\n        );\r\n        return response.data;\r\n      }),\r\n    );\r\n    return {\r\n      ids: newCommentsIds,\r\n      comments: result,\r\n    };\r\n  } catch (error: any) {\r\n    throw Error(error!.message);\r\n  }\r\n});\r\n\r\nexport const fetchAnswers = createAsyncThunk<\r\n  Comment[],\r\n  {\r\n    commentId: number;\r\n  },\r\n  { state: RootState }\r\n>('openedStory/fetchAnswers', async ({ commentId }, thunkAPI) => {\r\n  const { openedStory } = thunkAPI.getState();\r\n  try {\r\n    const result: Comment[] = await Promise.all(\r\n      openedStory\r\n        .comments!.find((val) => val.id === commentId)!\r\n        .kids!.map(async (id) => {\r\n          const response = await axios.get<Comment>(\r\n            `https://hacker-news.firebaseio.com/v0/item/${id}.json`,\r\n          );\r\n          return response.data;\r\n        }),\r\n    );\r\n    return result;\r\n  } catch (error: any) {\r\n    throw Error(error!.message);\r\n  }\r\n});\r\n\r\nexport const openedStorySlice = createSlice({\r\n  name: 'openedStory',\r\n  initialState,\r\n  reducers: {\r\n    clearAll: (state) => {\r\n      state.comments = [];\r\n      state.commentsStatus = 'loading';\r\n      state.storyData = null;\r\n      state.storyStatus = 'loading';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchOpenedStory.fulfilled, (state, action) => {\r\n      state.storyStatus = 'success';\r\n      state.storyData = action.payload;\r\n      if (!action.payload.kids) {\r\n        state.commentsStatus = 'success';\r\n      }\r\n    });\r\n    builder.addCase(fetchOpenedStory.rejected, (state) => {\r\n      state.storyStatus = 'error';\r\n    });\r\n    builder.addCase(fetchComments.fulfilled, (state, action) => {\r\n      state.commentsStatus = 'success';\r\n      state.comments = [...state.comments, ...action.payload];\r\n    });\r\n    builder.addCase(fetchComments.rejected, (state) => {\r\n      state.commentsStatus = 'error';\r\n    });\r\n    builder.addCase(refreshComments.pending, (state) => {\r\n      state.commentsStatus = 'loading';\r\n      state.comments = [];\r\n    });\r\n    builder.addCase(refreshComments.fulfilled, (state, action) => {\r\n      state.commentsStatus = 'success';\r\n      state.comments = [...action.payload.comments];\r\n      if (action.payload.ids) {\r\n        const result = {\r\n          ...state.storyData,\r\n          kids: [...action.payload.ids],\r\n        } as OpenedStory;\r\n        state.storyData = result;\r\n      }\r\n    });\r\n\r\n    builder.addCase(fetchAnswers.pending, (state, action) => {\r\n      const index = state.comments.findIndex(\r\n        (val) => val.id === action.meta.arg.commentId,\r\n      );\r\n      state.comments[index].answers = {\r\n        answersStatus: 'loading',\r\n        answersData: [],\r\n      };\r\n    });\r\n\r\n    builder.addCase(fetchAnswers.fulfilled, (state, action) => {\r\n      const index = state.comments.findIndex(\r\n        (val) => val.id === action.meta.arg.commentId,\r\n      );\r\n      state.comments[index].answers = {\r\n        answersStatus: 'success',\r\n        answersData: [...action.payload],\r\n      };\r\n    });\r\n    builder.addCase(fetchAnswers.rejected, (state, action) => {\r\n      const index = state.comments.findIndex(\r\n        (val) => val.id === action.meta.arg.commentId,\r\n      );\r\n      state.comments[index].answers = {\r\n        answersStatus: 'error',\r\n        answersData: [],\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const { clearAll } = openedStorySlice.actions;\r\n\r\nexport default openedStorySlice.reducer;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport {\r\n  Comment,\r\n  fetchAnswers,\r\n} from '../../store/openedStory/openedStorySlice';\r\nimport { useStoreDispatch } from '../../store/hooks';\r\n\r\ninterface CommentsListProps {\r\n  commentsStatus: 'loading' | 'success' | 'error';\r\n  comments: Comment[];\r\n}\r\n\r\nconst CommentsList = ({\r\n  commentsStatus,\r\n  comments,\r\n}: CommentsListProps): JSX.Element => {\r\n  const dispatch = useStoreDispatch();\r\n\r\n  const makeDate = (timestamp: number) => {\r\n    const date = new Date(timestamp * 1000);\r\n    const day = `0${date.getDate()}`;\r\n    const month = `0${date.getMonth() + 1}`;\r\n    const year = date.getFullYear();\r\n    const hours = `0${date.getHours()}`;\r\n    const minutes = `0${date.getMinutes()}`;\r\n    const seconds = `0${date.getSeconds()}`;\r\n    return `${day.substr(-2)}/${month.substr(-2)}/${year} ${hours.substr(\r\n      -2,\r\n    )}:${minutes.substr(-2)}:${seconds.substr(-2)}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {commentsStatus === 'success' && comments ? (\r\n        <div className=\"space-y-4\">\r\n          {comments.map((comment) => (\r\n            <div className=\"flex\" key={comment.id}>\r\n              <div className=\"flex-shrink-0 mr-3\" />\r\n              <div className=\"flex-1 border rounded-lg px-4 py-2 sm:px-6 sm:py-4 leading-relaxed\">\r\n                <strong>\r\n                  {comment.deleted ? 'Комментарий удален' : comment.by}\r\n                </strong>{' '}\r\n                <span className=\"text-xs text-gray-400\">\r\n                  {makeDate(comment.time)}\r\n                </span>\r\n                <p className=\"text-sm\">{comment.text}</p>\r\n                <div className=\"mt-4 flex items-center\">\r\n                  {comment.kids ? (\r\n                    <div\r\n                      className=\"text-md text-gray-500 font-semibold cursor-pointer hover:text-blue-500\"\r\n                      onClick={() =>\r\n                        dispatch(fetchAnswers({ commentId: comment.id }))\r\n                      }\r\n                    >\r\n                      {comment.kids.length} ответов{' '}\r\n                      {comment.answers &&\r\n                      comment.answers.answersStatus === 'loading' ? (\r\n                        <span>Загрузка...</span>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                {comment.answers &&\r\n                comment.answers.answersStatus === 'success' ? (\r\n                  <div className=\"space-y-4\">\r\n                    {comment.answers.answersData.map((answer) => (\r\n                      <div className=\"flex\" key={answer.id}>\r\n                        <div className=\"flex-1 bg-gray-100 rounded-lg px-4 py-2 sm:px-6 sm:py-4 leading-relaxed\">\r\n                          <strong>{answer.by}</strong>{' '}\r\n                          <span className=\"text-xs text-gray-400\">\r\n                            {makeDate(answer.time)}\r\n                          </span>\r\n                          <p className=\"text-xs sm:text-sm\">{answer.text}</p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","export default __webpack_public_path__ + \"static/media/left-arrow.de2ce4a5.svg\";","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { useEffect, useState } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { useStoreDispatch, useStoreSelector } from '../../store/hooks';\r\nimport {\r\n  clearAll,\r\n  fetchComments,\r\n  fetchOpenedStory,\r\n  refreshComments,\r\n} from '../../store/openedStory/openedStorySlice';\r\nimport CommentsList from '../../components/CommentsList';\r\nimport RefreshButton from '../../components/RefreshButton';\r\nimport ArrowSvg from '../../icons/left-arrow.svg';\r\nimport LoaderText from '../../components/LoaderText';\r\nimport NotFound from '../NotFound';\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst OpenedNewsPage = (): JSX.Element => {\r\n  const { id } = useParams<RouteParams>();\r\n  const dispatch = useStoreDispatch();\r\n  const { commentsStatus, storyStatus, storyData, comments } = useStoreSelector(\r\n    (state) => state.openedStory,\r\n  );\r\n\r\n  const [showingComments, setShowingComments] = useState({ start: 0, end: 4 });\r\n  const [fetching, setFetching] = useState(true);\r\n\r\n  const scrollHandler = (event: Event) => {\r\n    const target = event.target as Document;\r\n    if (\r\n      target.documentElement.scrollHeight -\r\n        (target.documentElement.scrollTop + window.innerHeight) <\r\n      200\r\n    )\r\n      setFetching(true);\r\n  };\r\n\r\n  const refreshCommentsFunc = () => {\r\n    setFetching(false);\r\n    setShowingComments({\r\n      start: 0,\r\n      end: 4,\r\n    });\r\n    dispatch(refreshComments(parseInt(id, 10)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeRefresh = setInterval(() => {\r\n      refreshCommentsFunc();\r\n    }, 60000);\r\n    document.addEventListener('scroll', scrollHandler);\r\n    dispatch(fetchOpenedStory(parseInt(id, 10)));\r\n    return () => {\r\n      document.removeEventListener('scroll', scrollHandler);\r\n      dispatch(clearAll());\r\n      clearInterval(timeRefresh);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      storyStatus === 'success' &&\r\n      fetching &&\r\n      storyData?.kids &&\r\n      storyData.kids.length > comments.length\r\n    ) {\r\n      dispatch(\r\n        fetchComments({\r\n          start: showingComments.start,\r\n          end: showingComments.end,\r\n        }),\r\n      )\r\n        .then(() => {\r\n          setShowingComments((prev) => ({\r\n            start: prev.end + 1,\r\n            end: prev.end + 5,\r\n          }));\r\n        })\r\n        .finally(() => setFetching(false));\r\n    }\r\n  }, [storyStatus, fetching]);\r\n\r\n  const makeDate = () => {\r\n    const date = new Date(storyData!.time * 1000);\r\n    const day = `0${date.getDate()}`;\r\n    const month = `0${date.getMonth() + 1}`;\r\n    const year = date.getFullYear();\r\n    const hours = `0${date.getHours()}`;\r\n    const minutes = `0${date.getMinutes()}`;\r\n    const seconds = `0${date.getSeconds()}`;\r\n    return `${day.substr(-2)}/${month.substr(-2)}/${year} ${hours.substr(\r\n      -2,\r\n    )}:${minutes.substr(-2)}:${seconds.substr(-2)}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {storyStatus === 'error' ? (\r\n        <NotFound />\r\n      ) : storyStatus === 'success' && storyData ? (\r\n        <>\r\n          <div className=\"max-w-4xl px-10 mx-auto my-4 py-6 bg-white rounded-lg shadow-md\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <span className=\"font-light text-gray-600\">{makeDate()}</span>\r\n              {storyData.url ? (\r\n                <a\r\n                  className=\"px-2 py-1 bg-gray-600 text-gray-100 font-bold rounded hover:bg-gray-500\"\r\n                  href={storyData.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Ссылка на сайт\r\n                </a>\r\n              ) : (\r\n                <span className=\"px-2 py-1 bg-gray-600 text-gray-100 font-bold rounded hover:bg-gray-500\">\r\n                  Нет ссылки\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <p className=\"text-2xl text-gray-700 font-bold\">\r\n                {storyData.title}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex justify-between items-center mt-4\">\r\n              <NavLink\r\n                className=\"text-blue-600 hover:underline flex justify-left items-center\"\r\n                to={`${process.env.PUBLIC_URL}/`}\r\n              >\r\n                <img src={ArrowSvg} alt=\"\" className=\"w-3 mr-1\" />\r\n                <span>К списку новостей</span>\r\n              </NavLink>\r\n              <div>\r\n                <span className=\"flex items-center\">\r\n                  Автор:{' '}\r\n                  <p className=\"text-gray-700 font-bold\">{storyData.by}</p>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {commentsStatus === 'loading' ? (\r\n            <LoaderText text=\"Загрузка комментариев...\" />\r\n          ) : (\r\n            <div className=\"mx-auto max-w-4xl bg-white rounded-lg shadow-md px-10 py-6\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\" text-lg font-semibold text-gray-900\">\r\n                  Комментарии ({storyData.kids ? storyData.kids.length : 0})\r\n                </h3>\r\n\r\n                <RefreshButton onClick={refreshCommentsFunc} />\r\n              </div>\r\n              <CommentsList\r\n                commentsStatus={commentsStatus}\r\n                comments={comments}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenedNewsPage;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport MainPage from './pages/MainPage';\nimport NotFound from './pages/NotFound';\nimport OpenedNewsPage from './pages/OpenedNewsPage';\n\nexport default function App(): JSX.Element {\n  return (\n    <Router>\n      <Navbar />\n      <main className=\"min-h-screen bg-gray-100 py-32\">\n        <div className=\"containter mx-auto px-2 md:px-20\">\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`}>\n              <MainPage />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/:id`}>\n              <OpenedNewsPage />\n            </Route>\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </main>\n    </Router>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport newStoriesReducer from './newStories/newStoriesSlice';\r\nimport openedStoryReducer from './openedStory/openedStorySlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    newStories: newStoriesReducer,\r\n    openedStory: openedStoryReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}